<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>snake_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>last = undefined;
rockPause = 0;
dirPause = 0;

direction = direction - 90;
speed = 3;

image_xscale = 0.1;
image_yscale = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dirPause++;
rockPause++;

if(rockPause == 10) {
    r = irandom_range(1, 5);
    a = instance_create(x, y, smallAsteroid_obj);
    if(r == 2) a.sprite_index = asteroid2_spr;
    if(r == 3) a.sprite_index = asteroid3_spr;
    if(r == 4) a.sprite_index = asteroid4_spr;
    if(r == 5) a.sprite_index = asteroid5_spr;
    last = a;
    rockPause = 0;
}

if(dirPause == 30) {
    dirPause = 0;
    
    r = irandom_range(0, 3);
    if(abs(angleDif_scr(direction, r * 90)) != 180) {
        direction = r * 90;
        image_angle = (r + 1) * 90;
    }
}

for (i = 0; i &lt; instance_number(smallAsteroid_obj); i += 1) {
    rock = instance_find(smallAsteroid_obj,i);
    if(rock != last &amp;&amp; place_meeting(x, y, rock)) {
        //instance_create(rock.x, rock.y, hit_obj);
        instance_destroy(rock);
        
        instance_destroy(id);
    }
}

for (i = 0; i &lt; instance_number(basicBullet_obj); i += 1) {
    bullet = instance_find(basicBullet_obj,i);
    if(place_meeting(x, y, bullet)) {
        instance_create(bullet.x, bullet.y, hit_obj);
        instance_destroy(bullet);
        
        instance_destroy(id);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
