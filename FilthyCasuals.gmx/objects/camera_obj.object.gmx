<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_hview = 300;
view_wview = 300;
view_hborder = view_hview/2;
view_vborder = view_wview/2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
show_debug_message(view_hport);

if (ds_list_size(playerList) == 1){
    x = ds_list_find_value(playerList, 0).x;
    y = ds_list_find_value(playerList, 0).y;
    view_wview = 200;
    view_hview = view_wview * .65;
} else
if (ds_list_size(playerList) == 2){
    x = mean(ds_list_find_value(playerList, 0).x, ds_list_find_value(playerList, 1).x);
    y = mean(ds_list_find_value(playerList, 0).y, ds_list_find_value(playerList, 1).y);
    view_wview = 200 + abs(ds_list_find_value(playerList, 0).x - ds_list_find_value(playerList, 1).x);
} else
if (ds_list_size(playerList) == 3){
    x = mean(min(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x),
        max(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x)
    );
    y = mean(min(ds_list_find_value(playerList, 0).y,ds_list_find_value(playerList, 1).y,ds_list_find_value(playerList, 2).y),
        max(ds_list_find_value(playerList, 0).y,ds_list_find_value(playerList, 1).y,ds_list_find_value(playerList, 2).y)
    );
    view_wview = 200 + abs(min(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x) - 
        max(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x));
} else if (ds_list_size(playerList) == 4){
    x = mean(min(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x,ds_list_find_value(playerList, 3).x),
        max(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x,ds_list_find_value(playerList, 3).x)
    );
    y = mean(min(ds_list_find_value(playerList, 0).y,ds_list_find_value(playerList, 1).y,ds_list_find_value(playerList, 2).y,ds_list_find_value(playerList, 3).y),
        max(ds_list_find_value(playerList, 0).y,ds_list_find_value(playerList, 1).y,ds_list_find_value(playerList, 2).y,ds_list_find_value(playerList, 3).y)
    );
    view_wview = 200 + abs(min(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x,ds_list_find_value(playerList, 3).x) - 
        max(ds_list_find_value(playerList, 0).x,ds_list_find_value(playerList, 1).x,ds_list_find_value(playerList, 2).x,ds_list_find_value(playerList, 3).x));
}

view_hview = view_wview * .65;

view_hborder = view_hview/2;
view_vborder = view_wview/2;

//camera_set_view_size(view_camera[0], view_wport[0], view_hport[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
